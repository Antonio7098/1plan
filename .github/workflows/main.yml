name: 1Plan CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  api-test:
    name: API Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./api
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: api/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate Prisma client
        run: npm run db:generate
        
      - name: Run tests
        run: npm test -- --run
        
      - name: Type check
        run: npm run typecheck
        
  docs-validate:
    name: Documentation
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate project structure
        run: |
          echo "Checking project structure..."
          
          # Check required directories
          for dir in docs/planning docs/ops docs/ops/sprints api; do
            if [ -d "$dir" ]; then
              echo "✓ $dir exists"
            else
              echo "❌ $dir missing"
              exit 1
            fi
          done
          
          # Check required files
          for file in docs/planning/prd.md docs/planning/technical-overview.md docs/ops/features.csv docs/ops/sprints/overview.md; do
            if [ -f "$file" ]; then
              echo "✓ $file exists"
            else
              echo "❌ $file missing"
              exit 1
            fi
          done
          
          echo "✅ Project structure validated!"
          
  integration:
    name: Integration Check
    runs-on: ubuntu-latest
    needs: [api-test, docs-validate]
    defaults:
      run:
        working-directory: ./api
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: api/package-lock.json
          
      - name: Install dependencies
        run: npm ci
        
      - name: Generate Prisma client
        run: npm run db:generate
        
      - name: Build API
        run: npm run build
        
      - name: Start API server (background)
        run: |
          npm start &
          SERVER_PID=$!
          echo "SERVER_PID=$SERVER_PID" >> $GITHUB_ENV
          sleep 5
          
      - name: Health check
        run: |
          echo "Testing API health endpoint..."
          curl -f http://localhost:4000/health/test || exit 1
          echo "✅ API health check passed!"
          
      - name: Stop server
        run: |
          kill $SERVER_PID || true
